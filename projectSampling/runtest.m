addpath('bin'); 
cd data\movieLens\ml-10m\ml-10M100K\; 
[x,y,z] = getData(); 
cd ../../../../; 
Rank = 150; 
subs = [x,y]; 
sp_tensor = sptensor(subs,z); 
CP = cp_als(sp_tensor,Rank); 
A = CP.u{1}'; 
B = CP.u{2}'; 
samples = [1e3,1e4,1e5,1e6,1e7]; 
recall_diamond = zeros(size(samples)); 
recall_wedge = zeros(size(samples)); 
times_diamond = zeros(size(samples)); 
times_wedge = zeros(size(samples)); 
time_exact = 0; 
tic; 
true_value = exact_search_matrix(A,B); 
time_exact = toc; 
B = B'; 
recall1_diamond = zeros(size(samples)); 
recall10_diamond = zeros(size(samples)); 
recall1h_diamond = zeros(size(samples)); 
recall1k_diamond = zeros(size(samples)); 
recall1_wedge = zeros(size(samples)); 
recall10_wedge = zeros(size(samples)); 
recall1h_wedge= zeros(size(samples)); 
recall1k_wedge = zeros(size(samples)); 
for i = 1:size(samples,2) 
    tic; 
    [~,values] = diamond_matrix(A,B,100,samples(i)); 
    times_diamond(i) = toc; 
    recall1_diamond(i) = (values(1) >= true_value(1))/1.0; 
    recall10_diamond(i) = sum(values(1:10) >= true_value(10))/10.0; 
    recall1h_diamond(i) = sum(values(1:100) >= true_value(100))/100.0; 
    recall1k_diamond(i) = sum(values(1:1000) >= true_value(1000))/1000.0; 
end 
    h = figure; 
    hold on; 
    title('Time-Samples'); 
    xlabel('samples log_{10}S'); 
    ylabel('time(s)'); 
    plot(log10(samples),times_diamond(:),'r','LineWidth',2); 
%     plot([1,4],[time_exact,time_exact]); 
    saveas(h,'sample-time-diamond.png'); 
    h = figure; 
    hold on; 
    title('Diamond Sampling'); 
    xlabel('samples'); 
    ylabel('recall'); 
    plot(log10(samples),recall1_diamond(:),'r','LineWidth',2); 
    plot(log10(samples),recall10_diamond(:),'b','LineWidth',2); 
    plot(log10(samples),recall1h_diamond(:),'k','LineWidth',2); 
    plot(log10(samples),recall1k_diamond(:),'g','LineWidth',2); 
    legend('t=1','t=10','t=100','t=1000'); 
    saveas(h,'sample-recall-diamond.png'); 
for i = 1:size(samples,2) 
    tic; 
    [~,values] = diamond_matrix(A,B,100,samples(i)); 
    times_wedge(i) = toc; 
    recall1_wedge(i) = (values(1) >= true_value(1))/1.0; 
    recall10_wedge(i) = sum(values(1:10) >= true_value(10))/10.0; 
    recall1h_wedge(i) = sum(values(1:100) >= true_value(100))/100.0; 
    recall1k_wedge(i) = sum(values(1:1000) >= true_value(1000))/1000.0; 
end 
    h = figure; 
    hold on; 
    title('Time-Samples'); 
    xlabel('samples log_{10}S'); 
    ylabel('time(s)'); 
    plot(log10(samples),times_wedge,'r','LineWidth',2); 
    plot(log10(samples),times_diamond,'--r','LineWidth',2); 
    legend('wegde','diamond'); 
    saveas(h,'sample-time-wedge.png'); 
    h = figure; 
    hold on; 
    title('Diamond Sampling'); 
    xlabel('samples'); 
    ylabel('recall'); 
    plot(log10(samples),recall1_diamond(:),'r','LineWidth',2); 
    plot(log10(samples),recall10_diamond(:),'b','LineWidth',2); 
    plot(log10(samples),recall1h_diamond(:),'k','LineWidth',2); 
    plot(log10(samples),recall1k_diamond(:),'g','LineWidth',2); 
    plot(log10(samples),recall1_wedge,'--r','LineWidth',2); 
    plot(log10(samples),recall10_wedge,'--b','LineWidth',2); 
    plot(log10(samples),recall1h_wedge,'--k','LineWidth',2); 
    plot(log10(samples),recall1k_wedge,'--g','LineWidth',2); 
    legend('t=1','t=10','t=100','t=1000'); 
    saveas(h,'sample-recall-wedge.png');